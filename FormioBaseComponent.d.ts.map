{"version":3,"file":"FormioBaseComponent.d.ts","sources":["FormioBaseComponent.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit } from '@angular/core';\nimport { FormioService } from './formio.service';\nimport { FormioAlerts } from './components/alerts/formio.alerts';\nimport { FormioAppConfig } from './formio.config';\nimport { FormioForm, FormioOptions, FormioRefreshValue } from './formio.common';\nimport { CustomTagsService } from './custom-component/custom-tags.service';\nimport { AlertsPosition } from './types/alerts-position';\nexport declare class FormioBaseComponent implements OnInit, OnChanges, OnDestroy {\n    ngZone: NgZone;\n    config: FormioAppConfig;\n    customTags?: CustomTagsService;\n    form?: FormioForm;\n    submission?: any;\n    src?: string;\n    url?: string;\n    service?: FormioService;\n    options?: FormioOptions;\n    noeval?: boolean;\n    formioOptions?: any;\n    renderOptions?: any;\n    readOnly?: boolean;\n    viewOnly?: boolean;\n    hideComponents?: string[];\n    refresh?: EventEmitter<FormioRefreshValue>;\n    error?: EventEmitter<any>;\n    success?: EventEmitter<object>;\n    language?: EventEmitter<string>;\n    hooks?: any;\n    renderer?: any;\n    watchSubmissionErrors?: boolean;\n    render: EventEmitter<object>;\n    customEvent: EventEmitter<object>;\n    fileUploadingStatus: EventEmitter<string>;\n    submit: EventEmitter<object>;\n    prevPage: EventEmitter<object>;\n    nextPage: EventEmitter<object>;\n    beforeSubmit: EventEmitter<object>;\n    change: EventEmitter<object>;\n    invalid: EventEmitter<boolean>;\n    errorChange: EventEmitter<any>;\n    formLoad: EventEmitter<any>;\n    submissionLoad: EventEmitter<any>;\n    ready: EventEmitter<FormioBaseComponent>;\n    formioElement?: ElementRef<any>;\n    AlertsPosition: typeof AlertsPosition;\n    formio: any;\n    initialized: boolean;\n    alerts: FormioAlerts;\n    formioReady: Promise<any>;\n    private formioReadyResolve;\n    private submitting;\n    private submissionSuccess;\n    isLoading: boolean;\n    noAlerts: boolean;\n    constructor(ngZone: NgZone, config: FormioAppConfig, customTags?: CustomTagsService);\n    getRenderer(): any;\n    getRendererOptions(): any;\n    createRenderer(): any;\n    setForm(form: FormioForm): any;\n    initialize(): void;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    onRefresh(refresh: FormioRefreshValue): void;\n    ngOnChanges(changes: any): void;\n    onPrevPage(data: any): void;\n    onNextPage(data: any): void;\n    onSubmit(submission: any, saved: boolean, noemit?: boolean): void;\n    onError(err: any): void;\n    focusOnComponet(key: any): void;\n    submitExecute(submission: object, saved?: boolean): void;\n    submitForm(submission: any, saved?: boolean): void;\n    onChange(value: any, flags: any, isModified: boolean): void;\n}\n"]}